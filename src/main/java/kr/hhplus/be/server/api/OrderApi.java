/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package kr.hhplus.be.server.api;

import kr.hhplus.be.server.api.model.OrderRegist;
import kr.hhplus.be.server.api.model.OrderResult;
import kr.hhplus.be.server.application.order.OrderServiceRequest;
import kr.hhplus.be.server.domain.order.entity.OrderItem;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Validated

@RestController
public interface OrderApi {

    /**
     * POST /order/create : 장바구니에 담긴 상품을 주문.
     *
     * @param request order에 추가할 정보 (required)
     * @return 주문완료된 상품 리스트와 결과 (status code 200)
     * or unexpected error (status code 400)
     */

    @PostMapping(
            value = "/order/create",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    ResponseEntity<OrderResult> registOrder(@RequestBody OrderServiceRequest request);


    /**
     * POST /order/regist : 주문하기 위한 상품을 장바구니에 담기.
     *
     * @param orderRegist 추가할 product 정보 (optional)
     * @return order 담긴 상품 리스트 (status code 200)
     * or unexpected error (status code 400)
     */

    @PostMapping(
            value = "/order/product",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    ResponseEntity<List<OrderItem>> registOrderProduct(@RequestBody(required = false) OrderRegist orderRegist);


    /**
     * GET /order/{id} : order의 상품리스트.
     *
     * @param id order 정보를 가져올 order의 id (required)
     * @return order 결과 (status code 200)
     * or unexpected error (status code 400)
     */

    @GetMapping(
            value = "/order/{id}",
            produces = {"application/json"}
    )
    ResponseEntity<OrderResult> searchOrderByOrderId(@PathVariable("id") Long id);

}