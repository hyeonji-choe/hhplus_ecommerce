/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ecommerce.openapi.apis;

import java.math.BigDecimal;
import com.ecommerce.openapi.apis.models.CouponInfo;
import com.ecommerce.openapi.apis.models.RegistCouponResult;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;


import java.util.List;

@Validated

@RestController
public interface CouponApi {

    /**
     * POST /coupons/get/{user_id}/{coupon_id} : user아이디로 쿠폰 발급 신청.
     *
     * @param couponId 쿠폰발급할 쿠폰의 아이디 (required)
     * @param userId 쿠폰발급할 user의 아이디 (required)
     * @return 발급성공한 쿠폰의 정보 (status code 200)
     *         or unexpected error (status code 400)
     */

    @PostMapping(
        value = "/coupons/get/{user_id}/{coupon_id}",
        produces = { "application/json" }
    )
    ResponseEntity<RegistCouponResult> getCouponByUser(@PathVariable("coupon_id") BigDecimal couponId,@PathVariable("user_id") BigDecimal userId);


    /**
     * GET /coupons : 쿠폰리스트를 조회함.
     *
     * @return 쿠폰 리스트 (status code 200)
     *         or unexpected error (status code 400)
     */

    @GetMapping(
        value = "/coupons",
        produces = { "application/json" }
    )
    ResponseEntity<List<CouponInfo>> searchCoupons();


    /**
     * GET /coupons/{id} : 유저가 소유한 쿠폰리스트를 조회함.
     *
     * @param id 자산을조회할 user의 아이디 (required)
     * @return 유저의 쿠폰 리스트 (status code 200)
     *         or unexpected error (status code 400)
     */

    @GetMapping(
        value = "/coupons/{id}",
        produces = { "application/json" }
    )
    ResponseEntity<List<CouponInfo>> searchCouponsByUser(@PathVariable("id") BigDecimal id);

}
