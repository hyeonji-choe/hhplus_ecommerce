/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ecommerce.openapi.apis;

import com.ecommerce.openapi.apis.models.Asset;
import java.math.BigDecimal;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

@Validated

@RestController
public interface AssetApi {

    /**
     * POST /asset/charge/{id}/{amount} : 자산을 충전함.
     *
     * @param id 자산을충전할 user의 아이디 (required)
     * @param amount 충전할 자산의 양 (required)
     * @return 자산충전 성공한 유저의 총자산 양 (status code 200)
     *         or unexpected error (status code 400)
     */

    @PostMapping(
        value = "/asset/charge/{id}/{amount}",
        produces = { "application/json" }
    )
    ResponseEntity<Asset> chargeAssetByUser(@PathVariable("id") BigDecimal id,@PathVariable("amount") BigDecimal amount);


    /**
     * GET /asset/{id} : 유저의 자산을 조회함.
     *
     * @param id 자산을조회할 user의 아이디 (required)
     * @return 유저의 총자산 양 (status code 200)
     *         or unexpected error (status code 400)
     */

    @GetMapping(
        value = "/asset/{id}",
        produces = { "application/json" }
    )
    ResponseEntity<Asset> searchAssetByUser(@PathVariable("id") BigDecimal id);

}
